name: Build Application

on:
  push:
    branches:
      - "main"
  release:
    types: [published]

env:
  IMAGE_NAME: sawanio
  IMAGE_TITLE: Sawan.io
  IMAGE_DESCRIPTION: This is the image for https://sawan.io website.

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          fetch-depth: 0

      - name: Using Node.JS ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Building app
        run: yarn --frozen-lockfile

      - name: Components testing
        run: yarn component:headless

      - name: E2E testing
        run: yarn e2e:headless

  build:
    name: Build image
    runs-on: ubuntu-latest
    needs: tests
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          fetch-depth: 0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_TITLE }}
            org.opencontainers.image.description=${{ env.IMAGE_DESCRIPTION }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: etc/docker/production/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy to Digital Ocean
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.DIGITALOCEAN_CLUSTER_NAME }}

      - name: Update tag version
        run: GIT_TAG=$(git describe --tags --abbrev=0) && sed -i 's|latest|${GIT_TAG}|' $GITHUB_WORKSPACE/etc/docker/production/deployment.yml

      - name: Check tag version
        run: tail -n 20 $GITHUB_WORKSPACE/etc/docker/production/deployment.yml

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/etc/docker/production/deployment.yml
